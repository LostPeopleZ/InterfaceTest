{"name":"testLoginOpms","status":"failed","statusDetails":{"known":false,"muted":false,"flaky":false,"message":"Multiple Failures (2 failures)\r\n\tjava.lang.IllegalStateException: Cannot determine which path implementation to use because the content-type text/plain; charset=utf-8 doesn't map to a path implementation.\r\n\tjava.lang.IllegalStateException: Cannot determine which path implementation to use because the content-type text/plain; charset=utf-8 doesn't map to a path implementation.","trace":"org.opentest4j.MultipleFailuresError: Multiple Failures (2 failures)\r\n\tjava.lang.IllegalStateException: Cannot determine which path implementation to use because the content-type text/plain; charset=utf-8 doesn't map to a path implementation.\r\n\tjava.lang.IllegalStateException: Cannot determine which path implementation to use because the content-type text/plain; charset=utf-8 doesn't map to a path implementation.\r\n\tat org.junit.jupiter.api.AssertAll.assertAll(AssertAll.java:80)\r\n\tat org.junit.jupiter.api.AssertAll.assertAll(AssertAll.java:44)\r\n\tat org.junit.jupiter.api.AssertAll.assertAll(AssertAll.java:38)\r\n\tat org.junit.jupiter.api.Assertions.assertAll(Assertions.java:2839)\r\n\tat com.zhicall.testcase.OpmsTest.testLoginOpms(OpmsTest.java:30)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)\r\n\tat org.testng.internal.Invoker.invokeMethod(Invoker.java:583)\r\n\tat org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)\r\n\tat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)\r\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)\r\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:648)\r\n\tat org.testng.TestRunner.run(TestRunner.java:505)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:455)\r\n\tat org.testng.SuiteRunner.access$000(SuiteRunner.java:40)\r\n\tat org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)\r\n\tat org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n\tSuppressed: java.lang.IllegalStateException: Cannot determine which path implementation to use because the content-type text/plain; charset=utf-8 doesn't map to a path implementation.\r\n\t\tat sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\r\n\t\tat sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\r\n\t\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\t\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\t\tat org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:80)\r\n\t\tat org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:74)\r\n\t\tat org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)\r\n\t\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:59)\r\n\t\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:237)\r\n\t\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:249)\r\n\t\tat io.restassured.internal.RestAssuredResponseOptionsGroovyImpl.path(RestAssuredResponseOptionsGroovyImpl.groovy:411)\r\n\t\tat io.restassured.internal.RestAssuredResponseOptionsImpl.path(RestAssuredResponseOptionsImpl.java:230)\r\n\t\tat com.zhicall.testcase.OpmsTest.lambda$testLoginOpms$0(OpmsTest.java:32)\r\n\t\tat org.junit.jupiter.api.AssertAll.lambda$assertAll$1(AssertAll.java:68)\r\n\t\tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)\r\n\t\tat java.util.stream.ReferencePipeline$11$1.accept(ReferencePipeline.java:373)\r\n\t\tat java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)\r\n\t\tat java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:482)\r\n\t\tat java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:472)\r\n\t\tat java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708)\r\n\t\tat java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\r\n\t\tat java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:499)\r\n\t\tat org.junit.jupiter.api.AssertAll.assertAll(AssertAll.java:77)\r\n\t\t... 24 more\r\n\tSuppressed: java.lang.IllegalStateException: Cannot determine which path implementation to use because the content-type text/plain; charset=utf-8 doesn't map to a path implementation.\r\n\t\tat sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\r\n\t\tat sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\r\n\t\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\t\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\t\tat org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:80)\r\n\t\tat org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:74)\r\n\t\tat org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)\r\n\t\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:249)\r\n\t\tat io.restassured.internal.RestAssuredResponseOptionsGroovyImpl.path(RestAssuredResponseOptionsGroovyImpl.groovy:411)\r\n\t\tat io.restassured.internal.RestAssuredResponseOptionsImpl.path(RestAssuredResponseOptionsImpl.java:230)\r\n\t\tat com.zhicall.testcase.OpmsTest.lambda$testLoginOpms$1(OpmsTest.java:35)\r\n\t\tat org.junit.jupiter.api.AssertAll.lambda$assertAll$1(AssertAll.java:68)\r\n\t\tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)\r\n\t\tat java.util.stream.ReferencePipeline$11$1.accept(ReferencePipeline.java:373)\r\n\t\tat java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)\r\n\t\tat java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:482)\r\n\t\tat java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:472)\r\n\t\tat java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708)\r\n\t\tat java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\r\n\t\tat java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:499)\r\n\t\tat org.junit.jupiter.api.AssertAll.assertAll(AssertAll.java:77)\r\n\t\t... 24 more\r\n"},"stage":"finished","description":"Opms测试Description","steps":[],"attachments":[],"parameters":[{"name":"FilePath","value":"src/test/resources/Excel/APITest.xlsx"},{"name":"SheetName","value":"Sheet1"},{"name":"propertiesPath","value":"src/test/resources/config/config.properties"},{"name":"arg1","value":"opms123456"},{"name":"arg0","value":"lock"}],"start":1620984098010,"stop":1620984099788,"uuid":"57e6a43c-f4aa-443c-b835-b0c7cbf029d5","historyId":"aa198f35e6b15b842983c8d06affb823","fullName":"com.zhicall.testcase.OpmsTest.testLoginOpms","labels":[{"name":"package","value":"com.zhicall.testcase.OpmsTest"},{"name":"testClass","value":"com.zhicall.testcase.OpmsTest"},{"name":"testMethod","value":"testLoginOpms"},{"name":"parentSuite","value":"liming Test Suite"},{"name":"suite","value":"opms测试"},{"name":"subSuite","value":"com.zhicall.testcase.OpmsTest"},{"name":"host","value":"DESKTOP-AGMQ460"},{"name":"thread","value":"19216@DESKTOP-AGMQ460.TestNG-tests-1(15)"},{"name":"framework","value":"testng"},{"name":"language","value":"java"},{"name":"story","value":"Opms测试Story"}],"links":[]}